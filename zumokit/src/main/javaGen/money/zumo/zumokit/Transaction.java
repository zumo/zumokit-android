// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from state.djinni

package money.zumo.zumokit;

public final class Transaction {


    /*package*/ final String mId;

    /*package*/ final String mType;

    /*package*/ final String mCurrencyCode;

    /*package*/ final String mFromUserId;

    /*package*/ final String mToUserId;

    /*package*/ final String mFromAccountId;

    /*package*/ final String mToAccountId;

    /*package*/ final String mNetwork;

    /*package*/ final String mStatus;

    /*package*/ final String mAmount;

    /*package*/ final String mFee;

    /*package*/ final CryptoDetails mCryptoDetails;

    /*package*/ final String mFiatDetails;

    /*package*/ final Long mSubmittedAt;

    /*package*/ final Long mConfirmedAt;

    /*package*/ final long mTimestamp;

    public Transaction(
            String id,
            String type,
            String currencyCode,
            String fromUserId,
            String toUserId,
            String fromAccountId,
            String toAccountId,
            String network,
            String status,
            String amount,
            String fee,
            CryptoDetails cryptoDetails,
            String fiatDetails,
            Long submittedAt,
            Long confirmedAt,
            long timestamp) {
        this.mId = id;
        this.mType = type;
        this.mCurrencyCode = currencyCode;
        this.mFromUserId = fromUserId;
        this.mToUserId = toUserId;
        this.mFromAccountId = fromAccountId;
        this.mToAccountId = toAccountId;
        this.mNetwork = network;
        this.mStatus = status;
        this.mAmount = amount;
        this.mFee = fee;
        this.mCryptoDetails = cryptoDetails;
        this.mFiatDetails = fiatDetails;
        this.mSubmittedAt = submittedAt;
        this.mConfirmedAt = confirmedAt;
        this.mTimestamp = timestamp;
    }

    public String getId() {
        return mId;
    }

    public String getType() {
        return mType;
    }

    public String getCurrencyCode() {
        return mCurrencyCode;
    }

    public String getFromUserId() {
        return mFromUserId;
    }

    public String getToUserId() {
        return mToUserId;
    }

    public String getFromAccountId() {
        return mFromAccountId;
    }

    public String getToAccountId() {
        return mToAccountId;
    }

    public String getNetwork() {
        return mNetwork;
    }

    public String getStatus() {
        return mStatus;
    }

    public String getAmount() {
        return mAmount;
    }

    public String getFee() {
        return mFee;
    }

    public CryptoDetails getCryptoDetails() {
        return mCryptoDetails;
    }

    public String getFiatDetails() {
        return mFiatDetails;
    }

    public Long getSubmittedAt() {
        return mSubmittedAt;
    }

    public Long getConfirmedAt() {
        return mConfirmedAt;
    }

    public long getTimestamp() {
        return mTimestamp;
    }

    @Override
    public boolean equals(Object obj) {
        if (!(obj instanceof Transaction)) {
            return false;
        }
        Transaction other = (Transaction) obj;
        return this.mId.equals(other.mId) &&
                this.mType.equals(other.mType) &&
                this.mCurrencyCode.equals(other.mCurrencyCode) &&
                ((this.mFromUserId == null && other.mFromUserId == null) || (this.mFromUserId != null && this.mFromUserId.equals(other.mFromUserId))) &&
                ((this.mToUserId == null && other.mToUserId == null) || (this.mToUserId != null && this.mToUserId.equals(other.mToUserId))) &&
                ((this.mFromAccountId == null && other.mFromAccountId == null) || (this.mFromAccountId != null && this.mFromAccountId.equals(other.mFromAccountId))) &&
                ((this.mToAccountId == null && other.mToAccountId == null) || (this.mToAccountId != null && this.mToAccountId.equals(other.mToAccountId))) &&
                this.mNetwork.equals(other.mNetwork) &&
                this.mStatus.equals(other.mStatus) &&
                ((this.mAmount == null && other.mAmount == null) || (this.mAmount != null && this.mAmount.equals(other.mAmount))) &&
                ((this.mFee == null && other.mFee == null) || (this.mFee != null && this.mFee.equals(other.mFee))) &&
                ((this.mCryptoDetails == null && other.mCryptoDetails == null) || (this.mCryptoDetails != null && this.mCryptoDetails.equals(other.mCryptoDetails))) &&
                ((this.mFiatDetails == null && other.mFiatDetails == null) || (this.mFiatDetails != null && this.mFiatDetails.equals(other.mFiatDetails))) &&
                ((this.mSubmittedAt == null && other.mSubmittedAt == null) || (this.mSubmittedAt != null && this.mSubmittedAt.equals(other.mSubmittedAt))) &&
                ((this.mConfirmedAt == null && other.mConfirmedAt == null) || (this.mConfirmedAt != null && this.mConfirmedAt.equals(other.mConfirmedAt))) &&
                this.mTimestamp == other.mTimestamp;
    }

    @Override
    public int hashCode() {
        // Pick an arbitrary non-zero starting value
        int hashCode = 17;
        hashCode = hashCode * 31 + mId.hashCode();
        hashCode = hashCode * 31 + mType.hashCode();
        hashCode = hashCode * 31 + mCurrencyCode.hashCode();
        hashCode = hashCode * 31 + (mFromUserId == null ? 0 : mFromUserId.hashCode());
        hashCode = hashCode * 31 + (mToUserId == null ? 0 : mToUserId.hashCode());
        hashCode = hashCode * 31 + (mFromAccountId == null ? 0 : mFromAccountId.hashCode());
        hashCode = hashCode * 31 + (mToAccountId == null ? 0 : mToAccountId.hashCode());
        hashCode = hashCode * 31 + mNetwork.hashCode();
        hashCode = hashCode * 31 + mStatus.hashCode();
        hashCode = hashCode * 31 + (mAmount == null ? 0 : mAmount.hashCode());
        hashCode = hashCode * 31 + (mFee == null ? 0 : mFee.hashCode());
        hashCode = hashCode * 31 + (mCryptoDetails == null ? 0 : mCryptoDetails.hashCode());
        hashCode = hashCode * 31 + (mFiatDetails == null ? 0 : mFiatDetails.hashCode());
        hashCode = hashCode * 31 + (mSubmittedAt == null ? 0 : mSubmittedAt.hashCode());
        hashCode = hashCode * 31 + (mConfirmedAt == null ? 0 : mConfirmedAt.hashCode());
        hashCode = hashCode * 31 + ((int) (mTimestamp ^ (mTimestamp >>> 32)));
        return hashCode;
    }

    @Override
    public String toString() {
        return "Transaction{" +
                "mId=" + mId +
                "," + "mType=" + mType +
                "," + "mCurrencyCode=" + mCurrencyCode +
                "," + "mFromUserId=" + mFromUserId +
                "," + "mToUserId=" + mToUserId +
                "," + "mFromAccountId=" + mFromAccountId +
                "," + "mToAccountId=" + mToAccountId +
                "," + "mNetwork=" + mNetwork +
                "," + "mStatus=" + mStatus +
                "," + "mAmount=" + mAmount +
                "," + "mFee=" + mFee +
                "," + "mCryptoDetails=" + mCryptoDetails +
                "," + "mFiatDetails=" + mFiatDetails +
                "," + "mSubmittedAt=" + mSubmittedAt +
                "," + "mConfirmedAt=" + mConfirmedAt +
                "," + "mTimestamp=" + mTimestamp +
        "}";
    }

}
