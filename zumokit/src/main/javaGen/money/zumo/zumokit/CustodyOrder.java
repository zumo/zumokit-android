// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.djinni

package money.zumo.zumokit;

import java.util.ArrayList;

/** Record containing custody order. */
public final class CustodyOrder {


    /*package*/ final String mId;

    /*package*/ final String mType;

    /*package*/ final String mStatus;

    /*package*/ final java.math.BigDecimal mAmount;

    /*package*/ final boolean mFeeInAmount;

    /*package*/ final java.math.BigDecimal mEstimatedFees;

    /*package*/ final java.math.BigDecimal mFees;

    /*package*/ final ArrayList<String> mFromAddresses;

    /*package*/ final String mFromAccountId;

    /*package*/ final String mFromUserId;

    /*package*/ final String mFromUserIntegratorId;

    /*package*/ final String mToAddress;

    /*package*/ final String mToAccountId;

    /*package*/ final String mToUserId;

    /*package*/ final String mToUserIntegratorId;

    /*package*/ final int mCreatedAt;

    /*package*/ final int mUpdatedAt;

    public CustodyOrder(
            String id,
            String type,
            String status,
            java.math.BigDecimal amount,
            boolean feeInAmount,
            java.math.BigDecimal estimatedFees,
            java.math.BigDecimal fees,
            ArrayList<String> fromAddresses,
            String fromAccountId,
            String fromUserId,
            String fromUserIntegratorId,
            String toAddress,
            String toAccountId,
            String toUserId,
            String toUserIntegratorId,
            int createdAt,
            int updatedAt) {
        this.mId = id;
        this.mType = type;
        this.mStatus = status;
        this.mAmount = amount;
        this.mFeeInAmount = feeInAmount;
        this.mEstimatedFees = estimatedFees;
        this.mFees = fees;
        this.mFromAddresses = fromAddresses;
        this.mFromAccountId = fromAccountId;
        this.mFromUserId = fromUserId;
        this.mFromUserIntegratorId = fromUserIntegratorId;
        this.mToAddress = toAddress;
        this.mToAccountId = toAccountId;
        this.mToUserId = toUserId;
        this.mToUserIntegratorId = toUserIntegratorId;
        this.mCreatedAt = createdAt;
        this.mUpdatedAt = updatedAt;
    }

    /** Identifier. */
    public String getId() {
        return mId;
    }

    /**
     * Custody order type.
     * @see CustodyOrderType
     */
    public String getType() {
        return mType;
    }

    /**
     * Transaction status.
     * @see CustodyOrder
     */
    public String getStatus() {
        return mStatus;
    }

    /** Custody order amount, null if not known yet. */
    public java.math.BigDecimal getAmount() {
        return mAmount;
    }

    /** Flag indicating if fees are included in order amount. */
    public boolean getFeeInAmount() {
        return mFeeInAmount;
    }

    /** Estimated custody order fees. */
    public java.math.BigDecimal getEstimatedFees() {
        return mEstimatedFees;
    }

    /** Actual custody order fees, null if not known yet.  */
    public java.math.BigDecimal getFees() {
        return mFees;
    }

    /** Crypto addresses from which funds where received, if any. */
    public ArrayList<String> getFromAddresses() {
        return mFromAddresses;
    }

    /** Debit {@link  Account Account} identifier, if applicable.  */
    public String getFromAccountId() {
        return mFromAccountId;
    }

    /** Debit {@link  Account's Account's} user identifier, if applicable.  */
    public String getFromUserId() {
        return mFromUserId;
    }

    /** Debit {@link  Account's Account's} user integrator identifier, if applicable.  */
    public String getFromUserIntegratorId() {
        return mFromUserIntegratorId;
    }

    /** Destination crypto address, if applicable. */
    public String getToAddress() {
        return mToAddress;
    }

    /** Credit {@link  Account Account} identifier, if applicable. */
    public String getToAccountId() {
        return mToAccountId;
    }

    /** Credit {@link  Account's Account's} user identifier, if applicable.  */
    public String getToUserId() {
        return mToUserId;
    }

    /** Credit {@link  Account's Account's} user integrator identifier, if applicable.  */
    public String getToUserIntegratorId() {
        return mToUserIntegratorId;
    }

    /** Epoch timestamp when custody order was created.  */
    public int getCreatedAt() {
        return mCreatedAt;
    }

    /** Epoch timestamp when custody order was updated.  */
    public int getUpdatedAt() {
        return mUpdatedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (!(obj instanceof CustodyOrder)) {
            return false;
        }
        CustodyOrder other = (CustodyOrder) obj;
        return this.mId.equals(other.mId) &&
                this.mType.equals(other.mType) &&
                this.mStatus.equals(other.mStatus) &&
                ((this.mAmount == null && other.mAmount == null) || (this.mAmount != null && this.mAmount.equals(other.mAmount))) &&
                this.mFeeInAmount == other.mFeeInAmount &&
                ((this.mEstimatedFees == null && other.mEstimatedFees == null) || (this.mEstimatedFees != null && this.mEstimatedFees.equals(other.mEstimatedFees))) &&
                ((this.mFees == null && other.mFees == null) || (this.mFees != null && this.mFees.equals(other.mFees))) &&
                ((this.mFromAddresses == null && other.mFromAddresses == null) || (this.mFromAddresses != null && this.mFromAddresses.equals(other.mFromAddresses))) &&
                ((this.mFromAccountId == null && other.mFromAccountId == null) || (this.mFromAccountId != null && this.mFromAccountId.equals(other.mFromAccountId))) &&
                ((this.mFromUserId == null && other.mFromUserId == null) || (this.mFromUserId != null && this.mFromUserId.equals(other.mFromUserId))) &&
                ((this.mFromUserIntegratorId == null && other.mFromUserIntegratorId == null) || (this.mFromUserIntegratorId != null && this.mFromUserIntegratorId.equals(other.mFromUserIntegratorId))) &&
                ((this.mToAddress == null && other.mToAddress == null) || (this.mToAddress != null && this.mToAddress.equals(other.mToAddress))) &&
                ((this.mToAccountId == null && other.mToAccountId == null) || (this.mToAccountId != null && this.mToAccountId.equals(other.mToAccountId))) &&
                ((this.mToUserId == null && other.mToUserId == null) || (this.mToUserId != null && this.mToUserId.equals(other.mToUserId))) &&
                ((this.mToUserIntegratorId == null && other.mToUserIntegratorId == null) || (this.mToUserIntegratorId != null && this.mToUserIntegratorId.equals(other.mToUserIntegratorId))) &&
                this.mCreatedAt == other.mCreatedAt &&
                this.mUpdatedAt == other.mUpdatedAt;
    }

    @Override
    public int hashCode() {
        // Pick an arbitrary non-zero starting value
        int hashCode = 17;
        hashCode = hashCode * 31 + mId.hashCode();
        hashCode = hashCode * 31 + mType.hashCode();
        hashCode = hashCode * 31 + mStatus.hashCode();
        hashCode = hashCode * 31 + (mAmount == null ? 0 : mAmount.hashCode());
        hashCode = hashCode * 31 + (mFeeInAmount ? 1 : 0);
        hashCode = hashCode * 31 + (mEstimatedFees == null ? 0 : mEstimatedFees.hashCode());
        hashCode = hashCode * 31 + (mFees == null ? 0 : mFees.hashCode());
        hashCode = hashCode * 31 + (mFromAddresses == null ? 0 : mFromAddresses.hashCode());
        hashCode = hashCode * 31 + (mFromAccountId == null ? 0 : mFromAccountId.hashCode());
        hashCode = hashCode * 31 + (mFromUserId == null ? 0 : mFromUserId.hashCode());
        hashCode = hashCode * 31 + (mFromUserIntegratorId == null ? 0 : mFromUserIntegratorId.hashCode());
        hashCode = hashCode * 31 + (mToAddress == null ? 0 : mToAddress.hashCode());
        hashCode = hashCode * 31 + (mToAccountId == null ? 0 : mToAccountId.hashCode());
        hashCode = hashCode * 31 + (mToUserId == null ? 0 : mToUserId.hashCode());
        hashCode = hashCode * 31 + (mToUserIntegratorId == null ? 0 : mToUserIntegratorId.hashCode());
        hashCode = hashCode * 31 + mCreatedAt;
        hashCode = hashCode * 31 + mUpdatedAt;
        return hashCode;
    }

    @Override
    public String toString() {
        return "CustodyOrder{" +
                "mId=" + mId +
                "," + "mType=" + mType +
                "," + "mStatus=" + mStatus +
                "," + "mAmount=" + mAmount +
                "," + "mFeeInAmount=" + mFeeInAmount +
                "," + "mEstimatedFees=" + mEstimatedFees +
                "," + "mFees=" + mFees +
                "," + "mFromAddresses=" + mFromAddresses +
                "," + "mFromAccountId=" + mFromAccountId +
                "," + "mFromUserId=" + mFromUserId +
                "," + "mFromUserIntegratorId=" + mFromUserIntegratorId +
                "," + "mToAddress=" + mToAddress +
                "," + "mToAccountId=" + mToAccountId +
                "," + "mToUserId=" + mToUserId +
                "," + "mToUserIntegratorId=" + mToUserIntegratorId +
                "," + "mCreatedAt=" + mCreatedAt +
                "," + "mUpdatedAt=" + mUpdatedAt +
        "}";
    }

}
