// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from records.djinni

package money.zumo.zumokit;

import java.util.HashMap;

/** Record containing transaction amount details. */
public final class TransactionAmount {


    /*package*/ final String mDirection;

    /*package*/ final String mUserId;

    /*package*/ final String mUserIntegratorId;

    /*package*/ final String mAccountId;

    /*package*/ final java.math.BigDecimal mAmount;

    /*package*/ final HashMap<String, Double> mFiatAmount;

    /*package*/ final String mAddress;

    /*package*/ final boolean mIsChange;

    /*package*/ final String mAccountNumber;

    /*package*/ final String mSortCode;

    /*package*/ final String mBic;

    /*package*/ final String mIban;

    public TransactionAmount(
            String direction,
            String userId,
            String userIntegratorId,
            String accountId,
            java.math.BigDecimal amount,
            HashMap<String, Double> fiatAmount,
            String address,
            boolean isChange,
            String accountNumber,
            String sortCode,
            String bic,
            String iban) {
        this.mDirection = direction;
        this.mUserId = userId;
        this.mUserIntegratorId = userIntegratorId;
        this.mAccountId = accountId;
        this.mAmount = amount;
        this.mFiatAmount = fiatAmount;
        this.mAddress = address;
        this.mIsChange = isChange;
        this.mAccountNumber = accountNumber;
        this.mSortCode = sortCode;
        this.mBic = bic;
        this.mIban = iban;
    }

    /**
     * Direction, either 'SENT' or 'RECEIVED'.
     * @see TransactionDirection
     */
    public String getDirection() {
        return mDirection;
    }

    /** User id or null if it is external user. */
    public String getUserId() {
        return mUserId;
    }

    /** User integrator id or null if it is external user. */
    public String getUserIntegratorId() {
        return mUserIntegratorId;
    }

    /** Account id or null if it is external user. */
    public String getAccountId() {
        return mAccountId;
    }

    /** Amount in transaction currency or null if transaction is Ethereum contract deploy. */
    public java.math.BigDecimal getAmount() {
        return mAmount;
    }

    /**
     * Amount in fiat currencies at the time of the transaction submission.
     * @see CurrencyCode
     */
    public HashMap<String, Double> getFiatAmount() {
        return mFiatAmount;
    }

    /** Blockchain address or null.  */
    public String getAddress() {
        return mAddress;
    }

    /** Indicates if this amount represents change amount. */
    public boolean getIsChange() {
        return mIsChange;
    }

    /** Fiat account number or null. */
    public String getAccountNumber() {
        return mAccountNumber;
    }

    /** Fiat account sort code or null. */
    public String getSortCode() {
        return mSortCode;
    }

    /** Fiat account BIC or null. */
    public String getBic() {
        return mBic;
    }

    /** Fiat account IBAN or null. */
    public String getIban() {
        return mIban;
    }

    @Override
    public boolean equals(Object obj) {
        if (!(obj instanceof TransactionAmount)) {
            return false;
        }
        TransactionAmount other = (TransactionAmount) obj;
        return this.mDirection.equals(other.mDirection) &&
                ((this.mUserId == null && other.mUserId == null) || (this.mUserId != null && this.mUserId.equals(other.mUserId))) &&
                ((this.mUserIntegratorId == null && other.mUserIntegratorId == null) || (this.mUserIntegratorId != null && this.mUserIntegratorId.equals(other.mUserIntegratorId))) &&
                ((this.mAccountId == null && other.mAccountId == null) || (this.mAccountId != null && this.mAccountId.equals(other.mAccountId))) &&
                ((this.mAmount == null && other.mAmount == null) || (this.mAmount != null && this.mAmount.equals(other.mAmount))) &&
                ((this.mFiatAmount == null && other.mFiatAmount == null) || (this.mFiatAmount != null && this.mFiatAmount.equals(other.mFiatAmount))) &&
                ((this.mAddress == null && other.mAddress == null) || (this.mAddress != null && this.mAddress.equals(other.mAddress))) &&
                this.mIsChange == other.mIsChange &&
                ((this.mAccountNumber == null && other.mAccountNumber == null) || (this.mAccountNumber != null && this.mAccountNumber.equals(other.mAccountNumber))) &&
                ((this.mSortCode == null && other.mSortCode == null) || (this.mSortCode != null && this.mSortCode.equals(other.mSortCode))) &&
                ((this.mBic == null && other.mBic == null) || (this.mBic != null && this.mBic.equals(other.mBic))) &&
                ((this.mIban == null && other.mIban == null) || (this.mIban != null && this.mIban.equals(other.mIban)));
    }

    @Override
    public int hashCode() {
        // Pick an arbitrary non-zero starting value
        int hashCode = 17;
        hashCode = hashCode * 31 + mDirection.hashCode();
        hashCode = hashCode * 31 + (mUserId == null ? 0 : mUserId.hashCode());
        hashCode = hashCode * 31 + (mUserIntegratorId == null ? 0 : mUserIntegratorId.hashCode());
        hashCode = hashCode * 31 + (mAccountId == null ? 0 : mAccountId.hashCode());
        hashCode = hashCode * 31 + (mAmount == null ? 0 : mAmount.hashCode());
        hashCode = hashCode * 31 + (mFiatAmount == null ? 0 : mFiatAmount.hashCode());
        hashCode = hashCode * 31 + (mAddress == null ? 0 : mAddress.hashCode());
        hashCode = hashCode * 31 + (mIsChange ? 1 : 0);
        hashCode = hashCode * 31 + (mAccountNumber == null ? 0 : mAccountNumber.hashCode());
        hashCode = hashCode * 31 + (mSortCode == null ? 0 : mSortCode.hashCode());
        hashCode = hashCode * 31 + (mBic == null ? 0 : mBic.hashCode());
        hashCode = hashCode * 31 + (mIban == null ? 0 : mIban.hashCode());
        return hashCode;
    }

    @Override
    public String toString() {
        return "TransactionAmount{" +
                "mDirection=" + mDirection +
                "," + "mUserId=" + mUserId +
                "," + "mUserIntegratorId=" + mUserIntegratorId +
                "," + "mAccountId=" + mAccountId +
                "," + "mAmount=" + mAmount +
                "," + "mFiatAmount=" + mFiatAmount +
                "," + "mAddress=" + mAddress +
                "," + "mIsChange=" + mIsChange +
                "," + "mAccountNumber=" + mAccountNumber +
                "," + "mSortCode=" + mSortCode +
                "," + "mBic=" + mBic +
                "," + "mIban=" + mIban +
        "}";
    }

}
